-- generated by a tool
CREATE OR REPLACE FUNCTION {{FunctionName}} (
{{#each InsertInputFields}}
{{{escape_sql_keyword Name}}} {{ProviderTypeName}}{{#unless @last}},{{/unless}}
{{/each}}
{{#if UsesCustomInsertType}}
,{{NewRecordParamterName}} {{NewTypeName}}
{{/if}}
) RETURNS {{PrimaryKeyField.ProviderTypeName}} AS 
$$
    DECLARE new_id {{PrimaryKeyField.ProviderTypeName}};

    BEGIN

        IF (security_user_id_param is not null) THEN
		    perform set_config('app.user_id', security_user_id_param::text, true);
        END IF;

		{{#if PrimaryKeyField.IsUuid}}
			new_id = uuid_generate_v1();
		{{/if}}

        insert into {{{escape_sql_keyword Name}}} (
            {{#each InsertFields}}
            {{{escape_sql_keyword Name}}}{{#unless @last}},{{/unless}}
            {{/each}}
        )
        VALUES
        (
            {{#each InsertFields}}
            {{{Value}}}{{#unless @last}},{{/unless}}
            {{/each}}
        );

		{{#unless PrimaryKeyField.IsUuid}}
        new_id = currval(pg_get_serial_sequence('{{Name}}', 'id'));
		{{/unless}}

        return new_id;
    END
$$
  LANGUAGE plpgsql VOLATILE SECURITY INVOKER
  COST 100;

REVOKE ALL ON FUNCTION {{FunctionName}} ({{#each InsertInputFields}} {{ProviderTypeName}}{{#unless @last}},{{/unless}}{{/each}}{{#if UsesCustomInsertType}},{{NewTypeName}}{{/if}}) FROM public;

GRANT EXECUTE ON FUNCTION {{FunctionName}} ({{#each InsertInputFields}} {{ProviderTypeName}}{{#unless @last}},{{/unless}}{{/each}}{{#if UsesCustomInsertType}},{{NewTypeName}}{{/if}}) TO web_app_role;


COMMENT ON FUNCTION {{FunctionName}} ({{#each InsertInputFields}} {{ProviderTypeName}}{{#unless @last}},{{/unless}}{{/each}}{{#if UsesCustomInsertType}},{{NewTypeName}}{{/if}})
    IS '{"applicationtype":"{{Name}}", "generated":true, "changesData":true, "friendlyName":"Add", "fullName":"{{FunctionName}}", "createsNew":true {{#if NoAddUI}},"ui":false, "api":false {{/if}} }';
